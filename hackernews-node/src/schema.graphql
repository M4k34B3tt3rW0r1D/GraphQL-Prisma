# import Link, LinkSubcriptionPayload, Vote, VoteSubscriptionPayload, LinkOrderByInput from "./generated/prisma.graphql"

type Query {
    info: String!
    #skip is the start index
    #first  is grab the first x elements
    feed(filter: String, skip: Int, first: Int, orderBy: LinkOrderByInput): Feed!
    # Fetch a single link by its `id`
    link(id: ID!): Link
}

type Feed {
    links: [Link!]!
    count: Int!
}

type Mutation {
    post(url: String!, description: String!): Link!
    # Update a link
    updateLink(id: ID!, url: String, description: String): Link
    # Delete a link
    deleteLink(id: ID!): Link

    # signup
    signup(email: String!, password: String!, name: String!): AuthPayload

    #login
    login(email: String!, password: String!): AuthPayload

    #vote
    vote(linkId: ID!): Vote
}

type AuthPayload {
    token: String
    user:User
}

type User {
    id: ID!
    name: String!
    email: String!
    links: [Link!]!
}

type Subscription {
    newLink: LinkSubscriptionPayload
    newVote: VoteSubscriptionPayload
}